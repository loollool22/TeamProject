package com.team.controller;

import javax.inject.Inject;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.team.domain.MemberDTO;
import com.team.service.MemberService;

@Controller //주소맵핑
public class MemberController {
	
	//객체생성
	@Inject
	private MemberService memberService;

	@RequestMapping(value = "/reservation/reservation", method = RequestMethod.GET)
	public String reservation() {
		// /WEB-INF/views/member/reservation.jsp
		return "member/insertForm";
	}
	
	//매핑 시 넘어오는 GET, POST도 확인 잘해야 한다.
	//위에서 insertForm으로 페이지 넘길 때 insertForm.jsp에 insertPro로 넘길 때 post방식으로 되어있어
	//아래에 get을 넣으면 오류
	@RequestMapping(value = "/member/insertPro", method = RequestMethod.POST)
	public String insertPro(MemberDTO meberDTO) {
		//회원가입 메서드호출
		memberService.insertMember(meberDTO);
		
		return "redirect:/member/login";
	}
	
	//http://localhost:8080/myweb2/member/login => member/loginForm.jsp  GET방식
	@RequestMapping(value = "/member/login", method = RequestMethod.GET)
	public String login() {
		System.out.println("MemberController login()");
		// /member/insert 검색하면 get 방식으로 return 되는 member/insertForm 페이지 연결
		
		return "member/loginForm";
	}
	
	// /member/loginPro POST => member/main 가상주소 이동
	@RequestMapping(value = "/member/loginPro", method = RequestMethod.POST)
	public String loginPro(MemberDTO memberDTO,HttpSession session) { 
		//HttpSession 인터페이스는 둘 이상의 page request에서 사용자를 식별하거나, 
		//웹 사이트를 방문하고 해당 사용자에 대한 정보를 저장하는 방법을 제공(검색)
		//memberDTO에는 id, pass 두개의 정보가 들어가 있다.
		System.out.println("MemberController loginPro()");
		System.out.println(memberDTO.getId());
		System.out.println(memberDTO.getPass());
		//로그인 처리
		MemberDTO memberDTO2=memberService.userCheck(memberDTO);
		if(memberDTO2!=null) { //null이 아니면 아이디 비밀번호 일치
			//세션값 생성
			//session에 id라는 이름으로 getId로 가져온 값을 넣어준다.
			session.setAttribute("id", memberDTO.getId());
			return "redirect:/member/main";
		}else{//아이디 비밀번호 틀림
			//msg.jsp로 가서 자바스크립트를 동작시킨다. 
			return "member/msg";
		}
	}
	
	// /member/main GET => /member/main.jsp 이동
	@RequestMapping(value = "/member/main", method = RequestMethod.GET)
	public String main() {
		
		System.out.println("MemberController main()");
		return "member/main";
	}
	
// /member/logout GET => 가상주소 /member/main
	@RequestMapping(value = "/member/logout", method = RequestMethod.GET)
	public String logout(HttpSession session) {
		System.out.println("MemberController logout()");
		//로그아웃(세션초기화)
		session.invalidate();
//		return "member/main"; 을 하면 main페이지로 이동하지만 주소가 바뀌지 않은상태로 jsp파일로 간다.
//		http://localhost:8080/myweb2/member/logout 와 같은 주소줄이 보인다.
		//logout.jsp에 location.href="main.jsp"; 포함되어 있어 메인페이지는 이동하나
		//주소줄 이름이 main으로 변경되지 않기때문에 redirect 사용
		return "redirect:/member/main"; 
	}
	
	@RequestMapping(value = "/member/info", method = RequestMethod.GET)
	public String info(HttpSession session, Model model) {
		//세션값 가져오기
		String id=(String)session.getAttribute("id");
		//디비작업
		MemberDTO memberDTO=memberService.getMember(id);
		
		//memberDTO 담아서 info.jsp로 이동
//		request.setAttribute("memberDTO", memberDTO); 자바에서는 이렇게 담아서 이동
		//스프링에서는 model 사용 => 위와 같이 자바에서 사용하는 것을 사용해도 무방
		model.addAttribute("memberDTO", memberDTO);

		return "member/info"; //redirect가 아니니 info.jsp로 이동
	}
}
